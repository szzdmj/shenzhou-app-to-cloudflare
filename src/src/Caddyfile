 {
	auto_https disable_redirects
	debug
	cache
}
 :80 {
	# 统计标识(用js结合php实现的传递)
	request_header HTTP_X_USING_HTACCESS 1
	request_header HTTP_X_USING_FRANKENPHP 1

	# 启用压缩
	encode zstd gzip

	# PHP程序位置，这里请根据实际的根目录修改
	root * /tmp/frankenphp_5d55e76a1c962c73ca14f0e5bdd1cc8d/public/
	cache
	# 返回空页面
	@blank path_regexp blank ^//blank/|^/blank/|^/favicon\.ico$
	route @blank {
		header Access-Control-Allow-Origin "*"
		header Cache-Control "public, max-age=31536000"
		respond "" 200
		abort
	}

	# 直接访问资源缓存文件
	@f1 path_regexp f1 ^/files/(\w)(\w\w)(\w{13})-\w-[\w\-]+(\.\w{2,4})$
	route @f1 {
		rewrite /temp/{http.regexp.f1.1}/{http.regexp.f1.2}/{http.regexp.f1.1}{http.regexp.f1.2}{http.regexp.f1.3}{http.regexp.f1.4}
	}
	@f2 path_regexp f2 ^/files/\w/\w{10}(\w)(\w\w)(\w{13})\w{6}/[\w/]+(\.\w{2,4})$
	route @f2 {
		rewrite /temp/{http.regexp.f2.1}/{http.regexp.f2.2}/{http.regexp.f2.1}{http.regexp.f2.2}{http.regexp.f2.3}{http.regexp.f2.4}
	}
	@tempfiles {
		file
		path_regexp tempfiles ^/temp/\w/\w\w/\w{16}\.\w{2,4}$
	}
	route @tempfiles {
		# 不处理任何内容，直接传递到静态文件
		file_server
		abort
	}

	# 如果没有找到匹配的文件或目录，则传递到统一入口
	@notFound {
		not file
	}
	route @notFound {
		rewrite /index.php?__nonematch__=1
	}

	# 禁止访问的目录或文件
	@forbidden {
		file
		not {
			path /robots.txt
		}
		path_regexp forbidden ^/(data|include|temp|plugin)/|\.db$|\.htaccess$|~\w+$|\.bak$|\.inc$|\.sh$|\.yaml$|\.ini$|\.bat$|\.dat$|\.txt$|\.lock$|\.conf$|\.inc\.php$|^/images/enc\.js$
	}
	respond @forbidden "" 404

	# PHP服务器
	php_server
}
